---
#############################################################
# Create cables between devices in Nautobot
#############################################################
- name: Create L3 Interface Cable Map
  networktocode.nautobot.cable:
    url: "{{ nb_url }}"
    token: "{{ nb_token }}"
    validate_certs: no
    termination_a_type: dcim.interface
    termination_a:
      device: "{{ item.0.name }}"
      name: "{{ item.1.name }}"
    termination_b_type: dcim.interface
    termination_b:
      device: "{{ item.1.connection.device }}"
      name: "{{ item.1.connection.int }}"
    type: mmf
    status: connected
    state: present
  loop: "{{ device_list | subelements('l3_interfaces', 'skip_missing=True') }}"
  when: item.1.connection is defined and item.1.connection
  tags:
    - cable
    - cable_l3

- name: Create Trunk Interface Cable Map
  networktocode.nautobot.cable:
    url: "{{ nb_url }}"
    token: "{{ nb_token }}"
    validate_certs: no
    termination_a_type: dcim.interface
    termination_a:
      device: "{{ item.0.name }}"
      name: "{{ item.1.name }}"
    termination_b_type: dcim.interface
    termination_b:
      device: "{{ item.1.connection.device }}"
      name: "{{ item.1.connection.int }}"
    type: mmf
    status: connected
    state: present
  loop: "{{ device_list | subelements('trunk_interfaces', 'skip_missing=True') }}"
  when: item.1.connection is defined and item.1.connection
  tags:
    - cable
    - cable_trunk

- name: Create LAG Member Interfaces Cable Map
  networktocode.nautobot.cable:
    url: "{{ nb_url }}"
    token: "{{ nb_token }}"
    validate_certs: no
    termination_a_type: dcim.interface
    termination_a:
      device: "{{ item.0.name }}"
      name: "{{ item.1.name }}"
    termination_b_type: dcim.interface
    termination_b:
      device: "{{ item.1.connection.device }}"
      name: "{{ item.1.connection.int }}"
    type: mmf
    status: connected
    state: present
  loop: "{{ device_list | subelements('lag_interfaces', 'skip_missing=True') }}"
  when: item.1.connection is defined and item.1.connection
  tags:
    - cable
    - cable_lag

- name: Create Access Interfaces Interface Cable Map
  networktocode.nautobot.cable:
    url: "{{ nb_url }}"
    token: "{{ nb_token }}"
    validate_certs: no
    termination_a_type: dcim.interface
    termination_a:
      device: "{{ item.0.name }}"
      name: "{{ item.1.name }}"
    termination_b_type: dcim.interface
    termination_b:
      device: "{{ item.1.connection.device }}"
      name: "{{ item.1.connection.int }}"
    type: mmf
    status: connected
    state: present
  loop: "{{ device_list | subelements('access_interfaces', 'skip_missing=True') }}"
  when: item.1.connection is defined and item.1.connection
  tags:
    - cable
    - cable_access
